name: CD - SFTP (password)

on:
  push:
    branches: ["**"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      HOST: ${{ secrets.SFTP_HOST }}
      PORT: ${{ secrets.SFTP_PORT }}
      USER: ${{ secrets.SFTP_USER }}
      PASS: ${{ secrets.SFTP_PASSWORD }}
      REMOTE_DIR: ${{ secrets.SFTP_REMOTE_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build deploy folder
        run: |
          mkdir -p deploy
          rsync -a \
            --exclude '.git/' --exclude '.github/' \
            --exclude 'node_modules/' --exclude 'var/' --exclude 'tests/' \
            ./ deploy/

      - name: Install sshpass
        run: |
          sudo apt-get update -y
          sudo apt-get install -y sshpass

      # âœ… CrÃ©ation correcte de ~/.ssh et ajout "best effort" de la host key
      - name: Add host key (best effort)
        shell: bash
        run: |
          set -e
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          # Tente de rÃ©cupÃ©rer l'empreinte de la clÃ© hÃ´te (certains SFTP managÃ©s refusent)
          if ssh-keyscan -T 5 -p "$PORT" "$HOST" 1>> ~/.ssh/known_hosts 2>/dev/null; then
            echo "Host key added to known_hosts"
          else
            echo "ssh-keyscan failed; falling back to StrictHostKeyChecking=no"
            {
              echo "Host $HOST"
              echo "  HostName $HOST"
              echo "  Port $PORT"
              echo "  StrictHostKeyChecking no"
              echo "  UserKnownHostsFile=/dev/null"
            } >> ~/.ssh/config
          fi
          chmod 644 ~/.ssh/known_hosts || true

      # ðŸ”Ž Test de connectivitÃ© SFTP trÃ¨s verbeux
      - name: SFTP preflight (pwd) - verbose
        shell: bash
        run: |
          sshpass -p "$PASS" sftp -P "$PORT" -o StrictHostKeyChecking=no -vvv "$USER@$HOST" <<< "pwd"

      - name: Ensure remote dir exists
        shell: bash
        run: |
          sshpass -p "$PASS" sftp -P "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" <<EOF
          -mkdir $REMOTE_DIR
          quit
          EOF

      - name: Upload (recursive)
        shell: bash
        run: |
          sshpass -p "$PASS" sftp -P "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" <<EOF
          cd $REMOTE_DIR
          put -r deploy/*
          quit
          EOF
